D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:89: warning: [unchecked] getNode() in ProjectionCalculator overrides <T>getNode() in Projection
    public Group getNode() {
                 ^
  return type requires unchecked conversion from Group to T
  where T is a type-variable:
    T extends Node declared in method <T>getNode()
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:28: warning: [unchecked] Possible heap pollution from parameterized vararg type LinkedUnit<? extends Projection>
    public ProjectionCalculator(CVector pivot, LinkedUnit<? extends Projection> ... units) {
                                        ^
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:40: warning: [unchecked] unchecked method invocation: method toArray in interface Stream is applied to given types
	this(new Anchor(0, 0), units.stream().toArray(LinkedUnit[]::new));
	                                             ^
  required: IntFunction<A[]>
  found: IntFunction<LinkedUnit[]>
  where A is a type-variable:
    A extends Object declared in method <A>toArray(IntFunction<A[]>)
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:40: warning: [unchecked] unchecked method invocation: constructor <init> in class ProjectionCalculator is applied to given types
	this(new Anchor(0, 0), units.stream().toArray(LinkedUnit[]::new));
	    ^
  required: CVector,LinkedUnit<? extends Projection>[]
  found: Anchor,LinkedUnit[]
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:40: warning: [unchecked] unchecked conversion
	this(new Anchor(0, 0), units.stream().toArray(LinkedUnit[]::new));
	                                             ^
  required: LinkedUnit<? extends Projection>[]
  found:    LinkedUnit[]
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:50: warning: [unchecked] Possible heap pollution from parameterized vararg type LinkedUnit<? extends Projection>
    public void calculateCollider(LinkedUnit<? extends Projection> ... units) {
                                                                       ^
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:63: warning: [unchecked] unchecked method invocation: method toArray in interface Stream is applied to given types
	calculateCollider(units.stream().toArray(LinkedUnit[]::new));
	                                        ^
  required: IntFunction<A[]>
  found: IntFunction<LinkedUnit[]>
  where A is a type-variable:
    A extends Object declared in method <A>toArray(IntFunction<A[]>)
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:63: warning: [unchecked] unchecked method invocation: method calculateCollider in class ProjectionCalculator is applied to given types
	calculateCollider(units.stream().toArray(LinkedUnit[]::new));
	                 ^
  required: LinkedUnit<? extends Projection>[]
  found: LinkedUnit[]
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:63: warning: [unchecked] unchecked conversion
	calculateCollider(units.stream().toArray(LinkedUnit[]::new));
	                                        ^
  required: LinkedUnit<? extends Projection>[]
  found:    LinkedUnit[]
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\collision\ProjectionCalculator.java:101: warning: [unchecked] Possible heap pollution from parameterized vararg type LinkedUnit<? extends Projection>
    public static Projection[] getCollider(boolean show, LinkedUnit<? extends Projection> ... units) {
                                                   ^
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\Unit.java:64: warning: [unchecked] Possible heap pollution from parameterized vararg type T
    public void addColliders(T ... colliders) {
                                   ^
  where T is a type-variable:
    T extends Projection declared in class Unit
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\Unit.java:72: warning: [unchecked] Possible heap pollution from parameterized vararg type T[]
    public void addColliders(T[] ... colliders) {
                                     ^
  where T is a type-variable:
    T extends Projection declared in class Unit
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\LinkedUnit.java:73: warning: [unchecked] unchecked conversion
	    return getRootParentUnit().getCollidables();
	                                             ^
  required: ArrayList<Collidable>
  found:    ArrayList
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\LinkedUnit.java:157: warning: [unchecked] unchecked conversion
	LinkedUnit<? extends Projection> rootParent = getRootParentUnit();
	                                                               ^
  required: LinkedUnit<? extends Projection>
  found:    LinkedUnit
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\Poly.java:44: warning: [unchecked] getNode() in Poly overrides <T>getNode() in Projection
    public Polygon getNode() {
                   ^
  return type requires unchecked conversion from Polygon to T
  where T is a type-variable:
    T extends Node declared in method <T>getNode()
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\engine_demo\App.java:96: warning: [unchecked] unchecked call to Unit(T) as a member of the raw type Unit
	Unit titleUnit = new Unit(new Img(new Anchor(HALF_WIDTH, HALF_HEIGHT), null, 
	                 ^
  where T is a type-variable:
    T extends Projection declared in class Unit
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\Img.java:51: warning: [unchecked] getNode() in Img overrides <T>getNode() in Projection
    public Group getNode() {
                 ^
  return type requires unchecked conversion from Group to T
  where T is a type-variable:
    T extends Node declared in method <T>getNode()
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\UnitCharacter.java:10: warning: [unchecked] Possible heap pollution from parameterized vararg type LinkedUnit<? extends Projection>
    public UnitCharacter(CVector pivot, LinkedUnit<? extends Projection> ... units) {
                                 ^
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\UnitCharacter.java:11: warning: [unchecked] unchecked generic array creation for varargs parameter of type LinkedUnit<? extends Projection>[]
	super(new ProjectionCalculator(new Anchor(pivot)));
	      ^
D:\GitHub\scifirpg\scifirpg\src\main\java\sharp\unit\UnitCharacter.java:20: warning: [unchecked] Possible heap pollution from parameterized vararg type LinkedUnit<? extends Projection>
    public void addSubUnit(LinkedUnit<? extends Projection> ... u) {
                                                                ^
20 warnings
